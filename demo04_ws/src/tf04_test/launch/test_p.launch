<launch>
    <!-- 
        流程：
        1.启动乌龟gui+turtle1键盘控制节点
        2.调用服务生成新的乌龟节点
        3.发布两只乌龟的坐标信息
        4.需要订阅turtle1与turtle2相对于世界坐标系的坐标消息，并转换成turtle1相对于turtle2的坐标关系 最后再生成速度消息
    -->
    
    <!-- 1.启动乌龟gui -->
    <node pkg="turtlesim" type="turtlesim_node" name="turtle1" output="screen"></node>
    <node pkg="turtlesim" type="turtle_teleop_key" name="key" output="screen"></node>
    <!-- 2.生成新的乌龟节点 -->
    <node pkg="tf04_test" type="test01_new_turtle_p.py" name="turtle2" output="screen"></node>    
    <!-- 3.发布两只乌龟的坐标信息 
            3-1.复用之前的乌龟坐标发布功能
            3-2.调用节点时，以参数的方式传递乌龟名称，解析参数置换：订阅的话题消息和子级坐标系名称 
    -->
    <node pkg="tf04_test" type="test02_pub_turtle_p.py" name="pub1" args="turtle1" output="screen"></node>
    <node pkg="tf04_test" type="test02_pub_turtle_p.py" name="pub2" args="turtle2" output="screen"></node>
    <!--4.订阅turtle1与turtle2相对于世界坐标系的坐标消息，并转换成turtle1相对于turtle2的坐标关系 再生成速度消息-->
    <node pkg="tf04_test" type="test03_control_turtle2_p.py" name="control" output="screen"></node>

</launch>